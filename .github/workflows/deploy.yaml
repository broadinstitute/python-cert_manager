---
name: 'deploy'

'on':
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  pypi_deploy:

    runs-on: 'ubuntu-latest'

    steps:
      - name: 'Checkout repo'
        uses: 'actions/checkout@v3'

      - name: 'Set up Python 3.10'
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: 'Install pip and Poetry'
        run: |
          python -m pip install --upgrade pip poetry
          poetry config virtualenvs.in-project true

      - name: Get full python version
        id: full-python-version
        run: |
          echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: 'Cache poetry'
        uses: 'actions/cache@v2.1.7'
        with:
          path: '.venv'
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: 'Install dependencies'
        run: 'poetry install'

      - name: 'Setup PyPi credential'
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: 'poetry config pypi-token.pypi "$PYPI_TOKEN"'

      - name: 'Package build'
        run: 'poetry build'

      - name: 'Publish package to PyPi'
        run: 'poetry publish'
